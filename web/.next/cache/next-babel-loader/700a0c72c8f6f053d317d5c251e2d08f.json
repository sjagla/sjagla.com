{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sebastian/github/sjagla-com/web/pages/post/[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// [slug].js\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport BlockContent from '@sanity/block-content-to-react';\nimport client from '../../client';\nimport BlogLayout from '../../components/blogLayout';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Post = props => {\n  const {\n    title = 'Missing title',\n    name = 'Missing name',\n    categories,\n    authorImage,\n    body = []\n  } = props;\n  return /*#__PURE__*/_jsxDEV(BlogLayout, {\n    siteTitle: title + \" | Sebastian Jagla\",\n    children: [/*#__PURE__*/_jsxDEV(Waypoint, {\n      onEnter: ({\n        event\n      }) => {\n        ChangeBackground('#FBFBFB');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BlockContent, _objectSpread({\n      blocks: body,\n      imageOptions: {\n        fit: 'max'\n      }\n    }, client.config()), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"title\": title->title,\n  \"authorImage\": author->image,\n  body\n}`;\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/sebastian/github/sjagla-com/web/pages/post/[slug].js"],"names":["groq","imageUrlBuilder","BlockContent","client","BlogLayout","urlFor","source","image","Post","props","title","name","categories","authorImage","body","event","ChangeBackground","fit","config","query","getInitialProps","context","slug","fetch"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOL,eAAe,CAACE,MAAD,CAAf,CAAwBI,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,MAAME,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AACJC,IAAAA,KAAK,GAAG,eADJ;AAEJC,IAAAA,IAAI,GAAG,cAFH;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,IAAI,GAAG;AALH,MAMFL,KANJ;AAQA,sBACE,QAAC,UAAD;AAAY,IAAA,SAAS,EAAEC,KAAK,GAAG,oBAA/B;AAAA,4BACI,QAAC,QAAD;AACE,MAAA,OAAO,EAAE,CAAC;AAAEK,QAAAA;AAAF,OAAD,KAAe;AACtBC,QAAAA,gBAAgB,CAAC,SAAD,CAAhB;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,gBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,YAAD;AACE,MAAA,MAAM,EAAEI,IADV;AAEE,MAAA,YAAY,EAAE;AAAEG,QAAAA,GAAG,EAAE;AAAP;AAFhB,OAGMd,MAAM,CAACe,MAAP,EAHN;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxBD;;AA0BA,MAAMC,KAAK,GAAGnB,IAAK;AACnB;AACA;AACA;AACA;AACA;AACA,EANA;;AAQAQ,IAAI,CAACY,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC9C;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACF,KAA9B;AACA,SAAO,MAAMhB,MAAM,CAACoB,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,IAAAA;AAAF,GAApB,CAAb;AACD,CAJD;;AAMA,eAAed,IAAf","sourcesContent":["// [slug].js\nimport groq from 'groq'\nimport imageUrlBuilder from '@sanity/image-url'\nimport BlockContent from '@sanity/block-content-to-react'\nimport client from '../../client'\nimport BlogLayout from '../../components/blogLayout'\n\nfunction urlFor (source) {\n  return imageUrlBuilder(client).image(source)\n}\n\nconst Post = (props) => {\n  const {\n    title = 'Missing title',\n    name = 'Missing name',\n    categories,\n    authorImage,\n    body = []\n  } = props\n\n  return (\n    <BlogLayout siteTitle={title + \" | Sebastian Jagla\"}>\n        <Waypoint\n          onEnter={({ event }) => {\n            ChangeBackground('#FBFBFB');\n          }}\n        ></Waypoint>\n        <h1>{title}</h1>\n        <BlockContent\n          blocks={body}\n          imageOptions={{ fit: 'max' }}\n          {...client.config()}\n        />\n    </BlogLayout>\n  )\n}\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"title\": title->title,\n  \"authorImage\": author->image,\n  body\n}`\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const { slug = \"\" } = context.query\n  return await client.fetch(query, { slug })\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}