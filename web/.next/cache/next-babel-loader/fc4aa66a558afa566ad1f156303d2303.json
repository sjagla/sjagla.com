{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sebastian/github/sjagla-com/web/pages/post/[slug].js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"post\\\" && slug.current == $slug][0]{\\n  title,\\n  \\\"name\\\": author->name,\\n  \\\"title\\\": title->title,\\n  \\\"postImage\\\": mainImage.asset->url,\\n  body\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// [slug].js\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport BlockContent from '@sanity/block-content-to-react';\nimport client from '../../client';\nimport BlogLayout from '../../components/blogLayout';\nimport { Waypoint } from 'react-waypoint';\nimport ChangeBackground from '../../components/ChangeBackground';\nimport Image from 'next/image';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nvar Post = function Post(props) {\n  var _props$title = props.title,\n      title = _props$title === void 0 ? 'Missing title' : _props$title,\n      _props$name = props.name,\n      name = _props$name === void 0 ? 'Missing name' : _props$name,\n      categories = props.categories,\n      postImage = props.postImage,\n      authorImage = props.authorImage,\n      _props$body = props.body,\n      body = _props$body === void 0 ? [] : _props$body;\n  console.log(postImage + \"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1\");\n  return /*#__PURE__*/_jsxDEV(BlogLayout, {\n    siteTitle: title + \" | Sebastian Jagla\",\n    children: [/*#__PURE__*/_jsxDEV(Waypoint, {\n      onEnter: function onEnter(_ref) {\n        var event = _ref.event;\n        ChangeBackground('#FBFBFB');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Image, {\n      src: postImage,\n      layout: \"responsive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(BlockContent, _objectSpread({\n      blocks: body,\n      imageOptions: {\n        fit: 'max'\n      }\n    }, client.config()), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Post;\nvar query = groq(_templateObject());\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query$slug, slug;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // It's important to default the slug so that it doesn't return \"undefined\"\n            _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n            _context.next = 3;\n            return client.fetch(query, {\n              slug: slug\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/sebastian/github/sjagla-com/web/pages/post/[slug].js"],"names":["groq","imageUrlBuilder","BlockContent","client","BlogLayout","Waypoint","ChangeBackground","Image","urlFor","source","image","Post","props","title","name","categories","postImage","authorImage","body","console","log","event","fit","config","query","getInitialProps","context","slug","fetch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAGA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOR,eAAe,CAACE,MAAD,CAAf,CAAwBO,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,IAAME,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA,qBAQlBA,KARkB,CAEpBC,KAFoB;AAAA,MAEpBA,KAFoB,6BAEZ,eAFY;AAAA,oBAQlBD,KARkB,CAGpBE,IAHoB;AAAA,MAGpBA,IAHoB,4BAGb,cAHa;AAAA,MAIpBC,UAJoB,GAQlBH,KARkB,CAIpBG,UAJoB;AAAA,MAKpBC,SALoB,GAQlBJ,KARkB,CAKpBI,SALoB;AAAA,MAMpBC,WANoB,GAQlBL,KARkB,CAMpBK,WANoB;AAAA,oBAQlBL,KARkB,CAOpBM,IAPoB;AAAA,MAOpBA,IAPoB,4BAOb,EAPa;AAUtBC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAS,GAAG,sCAAxB;AAEA,sBACE,QAAC,UAAD;AAAY,IAAA,SAAS,EAAEH,KAAK,GAAG,oBAA/B;AAAA,4BACI,QAAC,QAAD;AACE,MAAA,OAAO,EAAE,uBAAe;AAAA,YAAZQ,KAAY,QAAZA,KAAY;AACtBf,QAAAA,gBAAgB,CAAC,SAAD,CAAhB;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,aADJ,eAMI;AAAA,gBAAKO;AAAL;AAAA;AAAA;AAAA;AAAA,aANJ,eAOI,QAAC,KAAD;AACE,MAAA,GAAG,EAAIG,SADT;AAEE,MAAA,MAAM,EAAC;AAFT;AAAA;AAAA;AAAA;AAAA,aAPJ,eAWI,QAAC,YAAD;AACE,MAAA,MAAM,EAAEE,IADV;AAEE,MAAA,YAAY,EAAE;AAAEI,QAAAA,GAAG,EAAE;AAAP;AAFhB,OAGMnB,MAAM,CAACoB,MAAP,EAHN;AAAA;AAAA;AAAA;AAAA,aAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAmBD,CA/BD;;KAAMZ,I;AAiCN,IAAMa,KAAK,GAAGxB,IAAH,mBAAX;;AAQAW,IAAI,CAACc,eAAL;AAAA,uEAAuB,iBAAgBC,OAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrB;AADqB,kCAECA,OAAO,CAACF,KAFT,CAEbG,IAFa,EAEbA,IAFa,oCAEN,EAFM;AAAA;AAAA,mBAGRxB,MAAM,CAACyB,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,cAAAA,IAAI,EAAJA;AAAF,aAApB,CAHQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAehB,IAAf","sourcesContent":["// [slug].js\nimport groq from 'groq'\nimport imageUrlBuilder from '@sanity/image-url'\nimport BlockContent from '@sanity/block-content-to-react'\nimport client from '../../client'\nimport BlogLayout from '../../components/blogLayout'\nimport { Waypoint } from 'react-waypoint'\nimport ChangeBackground from '../../components/ChangeBackground'\nimport Image from 'next/image'\n\n\nfunction urlFor (source) {\n  return imageUrlBuilder(client).image(source)\n}\n\nconst Post = (props) => {\n  const {\n    title = 'Missing title',\n    name = 'Missing name',\n    categories,\n    postImage,\n    authorImage,\n    body = []\n  } = props\n\n  console.log(postImage + \"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1\")\n\n  return (\n    <BlogLayout siteTitle={title + \" | Sebastian Jagla\"}>\n        <Waypoint\n          onEnter={({ event }) => {\n            ChangeBackground('#FBFBFB');\n          }}\n        ></Waypoint>\n        <h1>{title}</h1>\n        <Image\n          src = {postImage}\n          layout=\"responsive\"\n        />\n        <BlockContent\n          blocks={body}\n          imageOptions={{ fit: 'max' }}\n          {...client.config()}\n        />\n    </BlogLayout>\n  )\n}\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"title\": title->title,\n  \"postImage\": mainImage.asset->url,\n  body\n}`\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const { slug = \"\" } = context.query\n  return await client.fetch(query, { slug })\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}